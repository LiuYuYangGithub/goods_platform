<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gp.goods_platform.dao.UserMapper">
  <resultMap id="BaseResultMap" type="com.gp.goods_platform.pojo.User">
    <id column="userid" jdbcType="INTEGER" property="userid" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="encrypted_password" jdbcType="VARCHAR" property="encryptedPassword" />
    <result column="realname" jdbcType="VARCHAR" property="realname" />
    <result column="birthday" jdbcType="DATE" property="birthday" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="email_auth_code" jdbcType="VARCHAR" property="emailAuthCode" />
    <result column="is_email_verified" jdbcType="BIT" property="isEmailVerified" />
    <result column="mobile" jdbcType="VARCHAR" property="mobile" />
    <result column="mobile_auth_code" jdbcType="VARCHAR" property="mobileAuthCode" />
    <result column="is_mobile_verified" jdbcType="BIT" property="isMobileVerified" />
    <result column="is_delete" jdbcType="BIT" property="isDelete" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    userid, username, encrypted_password, realname, birthday, email, email_auth_code, 
    is_email_verified, mobile, mobile_auth_code, is_mobile_verified, is_delete
  </sql>
  <select id="selectByExample" parameterType="com.gp.goods_platform.pojo.UserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user
    where userid = #{userid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user
    where userid = #{userid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.gp.goods_platform.pojo.UserExample">
    delete from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.gp.goods_platform.pojo.User">
    insert into user (userid, username, encrypted_password, 
      realname, birthday, email, 
      email_auth_code, is_email_verified, mobile, 
      mobile_auth_code, is_mobile_verified, is_delete
      )
    values (#{userid,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{encryptedPassword,jdbcType=VARCHAR}, 
      #{realname,jdbcType=VARCHAR}, #{birthday,jdbcType=DATE}, #{email,jdbcType=VARCHAR}, 
      #{emailAuthCode,jdbcType=VARCHAR}, #{isEmailVerified,jdbcType=BIT}, #{mobile,jdbcType=VARCHAR}, 
      #{mobileAuthCode,jdbcType=VARCHAR}, #{isMobileVerified,jdbcType=BIT}, #{isDelete,jdbcType=BIT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.gp.goods_platform.pojo.User">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userid != null">
        userid,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="encryptedPassword != null">
        encrypted_password,
      </if>
      <if test="realname != null">
        realname,
      </if>
      <if test="birthday != null">
        birthday,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="emailAuthCode != null">
        email_auth_code,
      </if>
      <if test="isEmailVerified != null">
        is_email_verified,
      </if>
      <if test="mobile != null">
        mobile,
      </if>
      <if test="mobileAuthCode != null">
        mobile_auth_code,
      </if>
      <if test="isMobileVerified != null">
        is_mobile_verified,
      </if>
      <if test="isDelete != null">
        is_delete,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userid != null">
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="encryptedPassword != null">
        #{encryptedPassword,jdbcType=VARCHAR},
      </if>
      <if test="realname != null">
        #{realname,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null">
        #{birthday,jdbcType=DATE},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="emailAuthCode != null">
        #{emailAuthCode,jdbcType=VARCHAR},
      </if>
      <if test="isEmailVerified != null">
        #{isEmailVerified,jdbcType=BIT},
      </if>
      <if test="mobile != null">
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="mobileAuthCode != null">
        #{mobileAuthCode,jdbcType=VARCHAR},
      </if>
      <if test="isMobileVerified != null">
        #{isMobileVerified,jdbcType=BIT},
      </if>
      <if test="isDelete != null">
        #{isDelete,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.gp.goods_platform.pojo.UserExample" resultType="java.lang.Long">
    select count(*) from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update user
    <set>
      <if test="record.userid != null">
        userid = #{record.userid,jdbcType=INTEGER},
      </if>
      <if test="record.username != null">
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.encryptedPassword != null">
        encrypted_password = #{record.encryptedPassword,jdbcType=VARCHAR},
      </if>
      <if test="record.realname != null">
        realname = #{record.realname,jdbcType=VARCHAR},
      </if>
      <if test="record.birthday != null">
        birthday = #{record.birthday,jdbcType=DATE},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.emailAuthCode != null">
        email_auth_code = #{record.emailAuthCode,jdbcType=VARCHAR},
      </if>
      <if test="record.isEmailVerified != null">
        is_email_verified = #{record.isEmailVerified,jdbcType=BIT},
      </if>
      <if test="record.mobile != null">
        mobile = #{record.mobile,jdbcType=VARCHAR},
      </if>
      <if test="record.mobileAuthCode != null">
        mobile_auth_code = #{record.mobileAuthCode,jdbcType=VARCHAR},
      </if>
      <if test="record.isMobileVerified != null">
        is_mobile_verified = #{record.isMobileVerified,jdbcType=BIT},
      </if>
      <if test="record.isDelete != null">
        is_delete = #{record.isDelete,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update user
    set userid = #{record.userid,jdbcType=INTEGER},
      username = #{record.username,jdbcType=VARCHAR},
      encrypted_password = #{record.encryptedPassword,jdbcType=VARCHAR},
      realname = #{record.realname,jdbcType=VARCHAR},
      birthday = #{record.birthday,jdbcType=DATE},
      email = #{record.email,jdbcType=VARCHAR},
      email_auth_code = #{record.emailAuthCode,jdbcType=VARCHAR},
      is_email_verified = #{record.isEmailVerified,jdbcType=BIT},
      mobile = #{record.mobile,jdbcType=VARCHAR},
      mobile_auth_code = #{record.mobileAuthCode,jdbcType=VARCHAR},
      is_mobile_verified = #{record.isMobileVerified,jdbcType=BIT},
      is_delete = #{record.isDelete,jdbcType=BIT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.gp.goods_platform.pojo.User">
    update user
    <set>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="encryptedPassword != null">
        encrypted_password = #{encryptedPassword,jdbcType=VARCHAR},
      </if>
      <if test="realname != null">
        realname = #{realname,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null">
        birthday = #{birthday,jdbcType=DATE},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="emailAuthCode != null">
        email_auth_code = #{emailAuthCode,jdbcType=VARCHAR},
      </if>
      <if test="isEmailVerified != null">
        is_email_verified = #{isEmailVerified,jdbcType=BIT},
      </if>
      <if test="mobile != null">
        mobile = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="mobileAuthCode != null">
        mobile_auth_code = #{mobileAuthCode,jdbcType=VARCHAR},
      </if>
      <if test="isMobileVerified != null">
        is_mobile_verified = #{isMobileVerified,jdbcType=BIT},
      </if>
      <if test="isDelete != null">
        is_delete = #{isDelete,jdbcType=BIT},
      </if>
    </set>
    where userid = #{userid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.gp.goods_platform.pojo.User">
    update user
    set username = #{username,jdbcType=VARCHAR},
      encrypted_password = #{encryptedPassword,jdbcType=VARCHAR},
      realname = #{realname,jdbcType=VARCHAR},
      birthday = #{birthday,jdbcType=DATE},
      email = #{email,jdbcType=VARCHAR},
      email_auth_code = #{emailAuthCode,jdbcType=VARCHAR},
      is_email_verified = #{isEmailVerified,jdbcType=BIT},
      mobile = #{mobile,jdbcType=VARCHAR},
      mobile_auth_code = #{mobileAuthCode,jdbcType=VARCHAR},
      is_mobile_verified = #{isMobileVerified,jdbcType=BIT},
      is_delete = #{isDelete,jdbcType=BIT}
    where userid = #{userid,jdbcType=INTEGER}
  </update>

  <!-->username查询<-->
  <select id="selectUsername" parameterType="java.lang.String" resultType="com.gp.goods_platform.pojo.User">
    select * from user where username=#{userName}
  </select>
  <!-->修改密码<-->
  <update id="updatePassword" parameterType="java.util.Map">
    update from user set encryptedPassword=#{userPassword} where username=#{userName}
  </update>

</mapper>